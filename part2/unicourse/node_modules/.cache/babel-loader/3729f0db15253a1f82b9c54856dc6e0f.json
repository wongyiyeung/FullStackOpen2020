{"ast":null,"code":"var _jsxFileName = \"/Users/yiyeung/Desktop/helsinki fullstack course/FullStackOpen2020/part2/unicourse/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Course = ({\n  course\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    name: course.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    parts: course.parts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Total, {\n    course: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst Header = ({\n  name\n}) => /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, name);\n\nconst Content = ({\n  parts\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, parts.map(p => /*#__PURE__*/React.createElement(Part, {\n    name: p.name,\n    exercises: p.exercises,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  })));\n};\n\nconst Part = ({\n  name,\n  exercises\n}) => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 37\n  }\n}, name, \" \", exercises);\n\nconst Total = props => {\n  const total = props.course.parts.reduce((sum, part) => sum += part.exercises, 0);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }\n  }, \"Number of exercises:\"), \" \", total);\n};\n\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  const c = courses.map(course => /*#__PURE__*/React.createElement(Course, {\n    course: course.course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }));\n  console.log(c);\n  return /*#__PURE__*/React.createElement(Course, {\n    course: courses[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  });\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/yiyeung/Desktop/helsinki fullstack course/FullStackOpen2020/part2/unicourse/src/index.js"],"names":["React","ReactDOM","Course","course","name","parts","Header","Content","map","p","exercises","Part","Total","props","total","reduce","sum","part","App","courses","id","c","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Course = ({course}) => {\n  return (\n    <div>\n    <Header name={course.name} />\n    <Content parts={course.parts} />\n    <Total course={course} />\n    </div>\n  )\n}\n\nconst Header = ({name}) => (\n  <h1>{name}</h1>\n)\n\nconst Content = ({parts}) => {\n  return (\n    <>\n    {parts.map(p => <Part name={p.name} exercises={p.exercises} />)}\n    </>\n  )\n}\n\nconst Part = ({name, exercises}) => <p>{name} {exercises}</p>;\n\nconst Total = (props) => {\n  const total = props.course.parts.reduce((sum, part) => sum += part.exercises, 0);\n  return (\n    <p><strong>Number of exercises:</strong> {total}</p>  \n  )\n}\n\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  const c = courses.map((course) => <Course course={course.course} />);\n \n  console.log(c);\n  \n  return (\n    <Course course={courses[0]} />\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}