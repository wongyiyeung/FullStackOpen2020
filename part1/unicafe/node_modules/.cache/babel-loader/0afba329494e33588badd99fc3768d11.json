{"ast":null,"code":"var _jsxFileName = \"/Users/yiyeung/Desktop/helsinki fullstack course/FullStackOpen2020/part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({\n  handleClick,\n  text\n}) => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  average,\n  positivePercentage\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, \"good \", good), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"neutral \", neutral), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, \"bad \", bad), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"all \", total), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"average \", average), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"positive \", positivePercentage, \"%\"));\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [average, setAverage] = useState(0.0);\n  const [positivePercentage, setPositivePercentage] = useState(0.0);\n\n  const handleFeedback = (newGood, newNeutral, newBad) => {\n    return () => {\n      setGood(newGood);\n      setNeutral(newNeutral);\n      setBad(newBad);\n      let newTotal = total + 1;\n      setAverage((newGood - newBad) / newTotal);\n      setPositivePercentage(newGood / newTotal * 100.0);\n      setTotal(newTotal);\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleFeedback(good + 1, neutral, bad),\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleFeedback(good, neutral + 1, bad),\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleFeedback(good, neutral, bad + 1),\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    total: total,\n    average: average,\n    positivePercentage: positivePercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    props: {\n      good: good\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/yiyeung/Desktop/helsinki fullstack course/FullStackOpen2020/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","handleClick","text","Statistics","good","neutral","bad","total","average","positivePercentage","App","setGood","setNeutral","setBad","setTotal","setAverage","setPositivePercentage","handleFeedback","newGood","newNeutral","newBad","newTotal","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({handleClick, text}) => {\n  return (\n    <button onClick={handleClick}>{text}</button>\n  )\n}\n\nconst Statistics = ({good,neutral,bad,total,average,positivePercentage}) => {\n  return (\n    <>\n    <h1>Statistics</h1>\n    <p>good {good}</p>\n    <p>neutral {neutral}</p>\n    <p>bad {bad}</p>\n    <p>all {total}</p>\n    <p>average {average}</p>\n    <p>positive {positivePercentage}%</p>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0);\n  const [average, setAverage] = useState(0.0);\n  const [positivePercentage, setPositivePercentage] = useState(0.0);\n\n  const handleFeedback = (newGood, newNeutral, newBad) => {\n    return () => {\n      setGood(newGood);\n      setNeutral(newNeutral);\n      setBad(newBad);\n      let newTotal = total + 1;\n      setAverage((newGood-newBad)/newTotal);\n      setPositivePercentage(newGood/newTotal*100.0);\n      setTotal(newTotal);\n    }\n  }\n\n  return (\n    <div>\n    <h1>Give Feedback</h1>\n    <Button handleClick={handleFeedback(good+1,neutral,bad)} text='good'/>\n    <Button handleClick={handleFeedback(good,neutral+1,bad)} text='neutral'/>\n    <Button handleClick={handleFeedback(good,neutral,bad+1)} text='bad'/>\n    <Statistics good={good} neutral={neutral} bad={bad} total={total} average={average} positivePercentage={positivePercentage}/>\n    <Statistics props={ {good: good} } />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}